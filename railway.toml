[build]
# Build command
builder = "dockerfile"

[deploy]
# Deployment configuration
startCommand = "./main"
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 3

# Health check configuration
healthcheckPath = "/health"
healthcheckTimeout = 30

# Service configuration will be handled by Railway automatically

# Environment variables
[deploy.env]
PORT = "8080"
ENVIRONMENT = "production"
DEBUG = "false"
LOG_LEVEL = "info"
LOG_FORMAT = "json"

# Database configuration (Railway will provide DATABASE_URL)
# DB_HOST will be extracted from DATABASE_URL
# DB_PORT will be extracted from DATABASE_URL
# DB_USER will be extracted from DATABASE_URL
# DB_PASSWORD will be extracted from DATABASE_URL
# DB_NAME will be extracted from DATABASE_URL
DB_SSL_MODE = "require"
DB_MAX_OPEN_CONNS = "25"
DB_MAX_IDLE_CONNS = "5"
DB_CONN_MAX_LIFETIME = "300s"

# Redis configuration (Railway will provide REDIS_URL)
# REDIS_HOST will be extracted from REDIS_URL
# REDIS_PORT will be extracted from REDIS_URL
# REDIS_PASSWORD will be extracted from REDIS_URL
REDIS_DB = "0"
REDIS_MAX_RETRIES = "3"
REDIS_POOL_SIZE = "10"

# JWT Configuration (set these in Railway dashboard)
# JWT_SECRET = "your_production_jwt_secret"
JWT_EXPIRATION = "3600"

# Nango Configuration (set these in Railway dashboard)
# NANGO_BASE_URL = "https://api.nango.dev"
# NANGO_CLIENT_ID = "your_nango_client_id"
# NANGO_CLIENT_SECRET = "your_nango_client_secret"
# NANGO_WEBHOOK_SECRET = "your_nango_webhook_secret"
# NANGO_API_KEY = "your_nango_api_key"

# GoHighLevel OAuth Configuration (set these in Railway dashboard)
# GOHIGHLEVEL_CLIENT_ID = "your_gohighlevel_client_id"
# GOHIGHLEVEL_CLIENT_SECRET = "your_gohighlevel_client_secret"
GOHIGHLEVEL_REDIRECT_URI = "https://api.engageautomations.com/api/v1/auth/gohighlevel/callback"
GOHIGHLEVEL_BASE_URL = "https://marketplace.gohighlevel.com/oauth/chooselocation"

# Rate Limiting
RATE_LIMIT_REQUESTS = "1000"
RATE_LIMIT_WINDOW = "60s"
RATE_LIMIT_ENABLED = "true"

# Caching
CACHE_DEFAULT_TTL = "300s"
CACHE_ENABLED = "true"
CACHE_COMPRESSION = "true"

# Server Configuration
SERVER_HOST = "0.0.0.0"
SERVER_READ_TIMEOUT = "30s"
SERVER_WRITE_TIMEOUT = "30s"
SERVER_IDLE_TIMEOUT = "60s"

# CORS Configuration
CORS_ALLOWED_ORIGINS = "*"
CORS_ALLOWED_METHODS = "GET,POST,PUT,DELETE,OPTIONS"
CORS_ALLOWED_HEADERS = "Origin,Content-Type,Accept,Authorization,X-Requested-With,X-Admin-Token"
CORS_ALLOW_CREDENTIALS = "true"

# Admin Configuration (set in Railway dashboard)
# ADMIN_TOKEN = "your_production_admin_token"

# Scheduler Configuration
SCHEDULER_ENABLED = "true"
TOKEN_REFRESH_SCHEDULE = "0 */1 * * *"
TOKEN_CLEANUP_SCHEDULE = "0 2 * * *"
HEALTH_CHECK_SCHEDULE = "*/5 * * * *"
TOKEN_MONITOR_SCHEDULE = "*/30 * * * *"

# Performance Configuration
MAX_REQUEST_SIZE = "10MB"
REQUEST_TIMEOUT = "30s"
SHUTDOWN_TIMEOUT = "30s"

# Monitoring
METRICS_ENABLED = "true"
HEALTH_CHECK_ENABLED = "true"

# Services will be managed through Railway dashboard
# PostgreSQL and Redis can be added via Railway CLI or dashboard